/* 
 * Created on Feb 22, 2008
 * 
 * Developed by: Rion Dooley - dooley [at] tacc [dot] utexas [dot] edu
 * 				 TACC, Texas Advanced Computing Center
 * 
 * https://www.tacc.utexas.edu/
 */

package org.teragrid.portal.filebrowser.applet.ui;

import java.io.FileInputStream;
import java.io.IOException;
import java.util.Properties;

import org.gridlab.gat.GAT;
import org.gridlab.gat.GATContext;
import org.gridlab.gat.Preferences;
import org.gridlab.gat.io.File;
import org.gridlab.gat.resources.HardwareResourceDescription;
import org.gridlab.gat.resources.Job;
import org.gridlab.gat.resources.JobDescription;
import org.gridlab.gat.resources.ResourceBroker;
import org.gridlab.gat.resources.ResourceDescription;
import org.gridlab.gat.resources.SoftwareDescription;
import org.teragrid.portal.filebrowser.applet.AppMain;
import org.teragrid.portal.filebrowser.applet.ConfigOperation;
import org.teragrid.portal.filebrowser.applet.exception.ResourceException;
import org.teragrid.portal.filebrowser.applet.gat.GATContextManager;
import org.teragrid.portal.filebrowser.applet.transfer.FTPSettings;

public class RemoteEnvironmentReader extends Thread {
    private FTPThread thread = null;
    public RemoteEnvironmentReader(FTPThread thread) {
        this.thread = thread;
    }
    
    public void run() throws ResourceException {
        System.out.println("Initiating globusrun to read env");
        
        // fork a job to get the user's env and create a property file
        
        try {
            thread.pnlBrowse.enableShortcutButtons(false);
            
            GATContext context = GATContextManager.getGATContext();
            Preferences prefs = GATContextManager.getDefaultPreferences();
            
            ResourceDescription rd = new HardwareResourceDescription(); 
            rd.addResourceAttribute("machine.node", thread.ftpServer.host + ":2120/jobmanager-fork");
            
            SoftwareDescription sd = new SoftwareDescription(); 
            sd.setLocation("gsiftp://" + thread.ftpServer.host + "//usr/bin/env"); 
            String envFile = "gsiftp://" + thread.ftpServer.host + "/" + 
//                ConfigOperation.getInstance().getDataDir() + 
                thread.ftpServer.host + ".env";
            File stdout = GAT.createFile(context, prefs, envFile); 
            sd.setStdout(stdout); 
            
            JobDescription jd = new JobDescription(sd,rd); 
            
            ResourceBroker broker = GAT.createResourceBroker(context,prefs); 
            
            Job job = broker.submitJob(jd); 
            
//            while (job.getState() != Job.STOPPED && 
//                   job.getState() != Job.SUBMISSION_ERROR) Thread.sleep(1000);
            
            java.io.File localFile = new java.io.File(ConfigOperation.getInstance().getDataDir() + 
                    thread.ftpServer.host + ".env");

            if (!localFile.exists()) {
                localFile.createNewFile();
            }
            
            stdout.copy(new org.gridlab.gat.URI("file:///" + localFile.getAbsolutePath()));
            
            thread.envProps = parseEnv(localFile.getAbsolutePath());
            
            thread.pnlBrowse.enableShortcutButtons(true);
            
        } catch (Exception e) {
            String message = "Failed to load user's remote\nenvironment on " + 
                thread.ftpServer.name + ".\nShortcuts will be disabled.";
            AppMain.Error(thread.pnlBrowse, message);
//            throw new ResourceException(message,e);
        }
    }
    
    private Properties parseEnv(String envFile) throws IOException {
        Properties props = new Properties();
        FileInputStream fis = new FileInputStream(envFile);
        props.load(fis);
        fis.close();
        return props;
        
    }
}
